package {		import com.reyco1.physinjector.PhysInjector;	import com.reyco1.physinjector.data.PhysicsObject;	import com.reyco1.physinjector.data.PhysicsProperties;		import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.geom.Point;	import flash.utils.Timer;	import flash.utils.setTimeout;		import Box2D.Common.Math.b2Vec2;

		public class Main extends Sprite {				private var physics:PhysInjector;		private var box2dBox:PhysicsObject;		private var point:Point;		private var timer:Timer;		private var oldX:Number;		private var oldY:Number;				public function Main() {			physics=new PhysInjector(stage,new b2Vec2(0,10),true);			addWalls();						box2dBox=addBox(null);						addEventListener(Event.ENTER_FRAME,update);			oldX = box2dBox.x;			oldY = box2dBox.y;			timer = new Timer(50,0);			timer.addEventListener(TimerEvent.TIMER,timeUpdate);			timer.start();		}				private function addWalls():void{			var floor:Sprite = new Sprite();			floor.graphics.beginFill(0x000000);			floor.graphics.drawRect(0,0,640,20);			floor.graphics.endFill();			floor.x=0;			floor.y=460;			addChild(floor);			physics.injectPhysics(floor,PhysInjector.SQUARE,new PhysicsProperties({isDynamic:false,friction:0.5,restitution:0.5}));			var roof:Sprite = new Sprite();			roof.graphics.beginFill(0x000000);			roof.graphics.drawRect(0,0,640,20);			roof.graphics.endFill();			roof.x=0;			roof.y=0;			addChild(roof);			physics.injectPhysics(roof,PhysInjector.SQUARE,new PhysicsProperties({isDynamic:false,friction:0.5,restitution:0.5}));			var leftWall:Sprite = new Sprite();			leftWall.graphics.beginFill(0x000000);			leftWall.graphics.drawRect(0,0,20,640);			leftWall.graphics.endFill();			leftWall.x=0;			leftWall.y=0;			addChild(leftWall);			physics.injectPhysics(leftWall,PhysInjector.SQUARE,new PhysicsProperties({isDynamic:false,friction:0.5,restitution:0.5}));			var rightWall:Sprite = new Sprite();			rightWall.graphics.beginFill(0x000000);			rightWall.graphics.drawRect(0,0,20,640);			rightWall.graphics.endFill();			rightWall.x=620;			rightWall.y=0;			addChild(rightWall);			physics.injectPhysics(rightWall,PhysInjector.SQUARE,new PhysicsProperties({isDynamic:false,friction:0.5,restitution:0.5}));		}						private function addBox(e:MouseEvent):PhysicsObject {			var circle:Sprite = new Sprite();			circle.graphics.beginFill(0xffffff);			circle.graphics.drawCircle(15,15,15);			circle.graphics.endFill();			circle.x=10;			circle.y=10;			addChild(circle);						return physics.injectPhysics(circle,PhysInjector.CIRCLE,new PhysicsProperties({isDynamic:true,friction:0.2,restitution:0.5}));					}				private function timeUpdate(event:TimerEvent){			if(!(box2dBox.x == oldX && box2dBox.y == oldY)){				var dot:Sprite = new Sprite();				dot.graphics.beginFill(0x000000);				dot.graphics.drawCircle(0, 0, 1);				dot.graphics.endFill();				dot.x = box2dBox.x;				dot.y = box2dBox.y;				addChild(dot);				oldX = box2dBox.x;				oldY = box2dBox.y;				kill(dot);			}		}				private function kill(sprite:Sprite):void{			setTimeout(removeDot,3000,sprite);		}				private function removeDot(sprite:Sprite):void{			if(sprite.parent != null){				sprite.parent.removeChild(sprite);			}		}				private function update(event:Event):void {			physics.update();		}			}}